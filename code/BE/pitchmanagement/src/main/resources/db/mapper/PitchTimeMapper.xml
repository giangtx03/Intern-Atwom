<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pitchmanagement.dao.PitchTimeDAO">
    <select id="selectbyPitchAndTime" parameterType="map" resultType="com.pitchmanagement.dto.PitchTimeDTO">
        select 
            pt.status,
            pt.pitch_id as pitchId,
            pt.time_slot_id as timeSlotId,
            t.start_time as startTime,
            t.end_time as endTime,
            p.name,
            p.address,
            pt1.name as namePitch
            FROM pitch_time pt
            join time_slot t
            join pitch p
        join pitch_type pt1 where ( pt.pitch_id = #{pitch_id} ) and (pt.time_slot_id = #{time_id})
    </select>

    <select id="FilterPitchByPitchId" parameterType="map" resultType="com.pitchmanagement.dto.PitchTimeDTO">
    SELECT pt.price,
        pt.status,
        pt.pitch_id as pitchId,
        pt.time_slot_id as timeSlotId,
        t.start_time as startTime,
        t.end_time as endTime,
        p.name,
        p.address,
        pt1.name as name_pitch 
        FROM pitch_time pt
        join time_slot t on t.id = pt.time_slot_id
        join pitch p on p.id = pt.pitch_id
        join pitch_type pt1 on p.pitch_type_id = pt1.id
    where pitch_id = #{pitch_id}  and status = 'enable';
    </select>

    <update id = "ChangeStatus" parameterType = "map">
       UPDATE pitch_time
        SET
        status = #{status}
        WHERE pitch_id = #{pitch_id} AND time_slot_id = #{time_slot_id}
    </update>

    <!-- ........................................................... -->
    <insert id="insertPitchTime" parameterType="com.pitchmanagement.model.request.PitchTimeRequest">
        INSERT INTO `pitch_time` (`price`, `status`, `pitch_id`, `time_slot_id`)
        VALUES (#{price}, #{status}, #{pitchId}, #{timeSlotId});
    </insert>

    <update id="updateStatusPitchTimeByIds" parameterType="com.pitchmanagement.model.request.PitchTimeRequest">
        UPDATE pitch_time
        SET `status` = #{status}
        WHERE pitch_id = #{pitchId} AND time_slot_id = #{timeSlotId}
    </update>

    <update id="updatePricePitchTimeByIds" parameterType="com.pitchmanagement.model.request.PitchTimeRequest">
        UPDATE pitch_time
        SET `price` = #{price}
        WHERE pitch_id = #{pitchId} AND time_slot_id = #{timeSlotId}
    </update>

    <delete id="deletePitchTime" parameterType="map">
        DELETE FROM `pitch_time`
        WHERE  `pitch_id`=#{pitchId} AND `time_slot_id`=#{timeSlotId};
    </delete>

    <select id="selectPitchTimeByIds" parameterType="map" resultType="com.pitchmanagement.model.request.PitchTimeRequest">
        SELECT *
        FROM pitch_time
        WHERE pitch_id = #{pitchId} AND time_slot_id = #{timeSlotId}
    </select>

    <select id="selectPictTimeByPitchId" parameterType="Long" resultMap="resultPitchId" >
        SELECT ts.start_time, ts.end_time, pt.price, pt.status, ts.id
        FROM pitch_time pt
        INNER JOIN time_slot ts ON ts.id = pt.time_slot_id
        WHERE pt.pitch_id = #{pitchId}
    </select>

    <resultMap id="resultPitchId" type="com.pitchmanagement.dto.admin.PitchTimeChildrenDto">
        <result property="start_time" column="startTime"/>
        <result property="end_time" column="endTime"/>
        <result property="price" column="price"/>
        <result property="status" column="status"/>
        <result property="id" column="idTime"/>
    </resultMap>

    <resultMap id="result" type="com.pitchmanagement.model.request.PitchTimeRequest">
        <result property="id" column="id"/>
        <result property="status" column="status"/>
        <result property="pitch_id" column="pitchId"/>
        <result property="time_slot_id" column="timeSlotId"/>
    </resultMap>

    <!-- ........................................................... -->
</mapper>